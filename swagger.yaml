openapi: 3.0.0
info:
  version: "1"
  title: "ZynMart"
  description: "Single vendor categories e-commerce website, with  custom user authentication,  rest full API monolithic architecture backend."
  contact:
    name: Naimur Rahaman
    url: https://www.linkedin.com/in/naimur-1rahaman/
    email: naimur.btec@gmail.com
servers:
  # Added by API Auto Mocking Plugin
  - description: Dev
    url: "http://localhost:5000/api/v1/"

tags:
  - name: Auth
    description: Authentication end point (public)
 

paths:
  "/auth/signup":
    post:
      description: Create a new account
      tags: [Auth]
      requestBody:
        content:
          "application/json":
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Mahmudul selim"
                email:
                  type: string
                  format: email
                  example: selim.btec@gmail.com
                password:
                  type: string
                  format: password
                  example: password123
                batch:
                  type: string
                  example: 11th
                phone:
                  type: string
                  format: phone
                  example: +8801711000000
                role:
                  type: string
                  format: enum
                  example: "user"
                volunteerId:
                  type: string
                  example: NL10FM001
                student_reg_Id:
                  type: string
                  example: T-2017-2005
              required:
                [
                  name,
                  email,
                  password,
                  batch,
                  phone,
                  volunteerId,
                  student_reg_Id,
                ]
      responses:
        "201":
          description: Signup successfuly
          content:
            "application/json":
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 201
                  message:
                    type: string
                    example: Signup successful
                  data:
                    type: object
                    properties:
                      access_Token:
                        type: string
                        example: "beararanogoaioqo7afdarh4reghhaha4a6g4agag8aqgha1ga6g4agagg4agh68hga46ag1a6ag"
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        example: "/auth/singup"
                      signin:
                        type: string
                        example: "/auth/signin"
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
  "/auth/signin":
    post:
      description: login to your account
      tags: [Auth]
      requestBody:
        content:
          "application/json":
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: selim.btec@gmail.com
                password:
                  type: string
                  format: password
                  example: Password123@#

              required: [email, password]
      responses:
        "200":
          description: login successful
          content:
            "application/json":
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 200
                  message:
                    type: string
                    example: login successful
                  data:
                    type: object
                    properties:
                      access_Token:
                        type: string
                        example: "beararanogoaioqo7afdarh4reghhaha4a6g4agag8aqgha1ga6g4agagg4agh68hga46ag1a6ag"
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        example: "/auth/singin"

        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"

          
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    userUpdateDto:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              format: Int32
              example: 1
            volunteerId:
              type: string
              example: NL10FM001
            name:
              type: string
              example: Mahmudul Haque Selim
            email:
              type: string
              format: email
              example: selim.btec@gamil.com
            phone:
              type: string
              example: "+8801711-111111"
            batch:
              type: string
              example: 11th
            student_reg_Id:
              type: string
              example: T-2017-2005

          required: [id, volunteerId, name, batch, student_reg_Id, email]
        - $ref: "#/components/schemas/TimeStamp"
    eventCreatedDto:
      allOf:
        - type: object
          properties:
            authorId:
              type: integer
              format: int32
              example: 1
            title:
              type: string
              example: fist event
            body:
              type: string
              format: text
              example: body of the first article
            cover:
              type: string
              format: url
              example: "http://s3.aws.com/natrueandlifefffffff4.jpg"
            date:
              type: string
              format: date
              example: 2017-07-21
            status:
              type: string
              enum: [draft, publish]
              example: draft
          required: [title, body, status, date, userId]
        - $ref: "#/components/schemas/TimeStamp"
    Comments:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              format: Int32
              example: 1
            authorId:
              type: integer
              format: Int32
              example: 1
            articleId:
              type: integer
              format: Int32
              example: 1
            body:
              type: string
              format: text
              example: body of the comment
            status:
              type: string
              enum: [public, private]
              example: public
          required: [id, authorId, articleId, body, status]
        - $ref: "#/components/schemas/TimeStamp"
    updateArticleDto:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        message:
          type: string
          example: "Article update successfuly"
        data:
          allOf:
            - $ref: "#/components/schemas/Article"
        links:
          type: object
          properties:
            self:
              type: string
              format: url
              example: "/article/1"
    createArticleDto:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 201
        message:
          type: string
          example: "Article create successfuly"
        data:
          allOf:
            - $ref: "#/components/schemas/Article"
        links:
          type: object
          properties:
            self:
              type: string
              format: url
              example: "/article/1"
    updateEventDto:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        message:
          type: string
          example: "event update successfuly"
        data:
          allOf:
            - $ref: "#/components/schemas/eventCreatedDto"
        links:
          type: object
          properties:
            self:
              type: string
              format: url
              example: "/events/1"
    Article:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              format: Int32
              example: 1
            authorId:
              type: integer
              format: Int32
              example: 1
            title:
              type: string
              example: first article
            body:
              type: string
              format: text
              example: body of the fist article
            cover:
              type: string
              format: url
              example: "http://s3.aws.com/natrueandlifefffffff4.jpg"
            status:
              type: string
              enum: [draft, published]
              example: draft
          required: [id, authorId, title, body, status]
        - $ref: "#/components/schemas/TimeStamp"
    TimeStamp:
      type: object
      properties:
        createdAt:
          type: string
          format: datetime
        updatedAt:
          type: string
          format: datetime
      required: [createdAt, updatedAt]
    AuthorDto:
      type: object
      properties:
        id:
          type: integer
          format: Int32
          example: "4edafhoiafn64dga5afdf54af54"
        name:
          type: string
          example: "Mahmudul selim"
      required: [id, name]
    Pagination:
      type: object
      properties:
        page:
          type: integer
          format: Int32
          example: 2
        limit:
          type: integer
          format: Int32
          example: 10
        next:
          type: integer
          format: Int32
          example: 3
        prev:
          type: integer
          format: Int32
          example: 1
        totalPage:
          type: integer
          format: Int32
          example: 13
        totalItems:
          type: integer
          format: Int32
          example: 130
      required:
        - page
        - limit
        - totalPage
        - totalItems

  responses:
    "500":
      description: Internal server error
      content:
        "application/json":
          schema:
            type: object
            properties:
              code:
                type: integer
                format: Int32
                example: 500
              error:
                type: string
                example: Internal server error
              message:
                type: string
                example: We are sorry for the enconvenience, Please try agin laiter
    "401":
      description: UnAuthorized
      content:
        "application/json":
          schema:
            type: object
            properties:
              code:
                type: integer
                format: Int32
                example: 401
              error:
                type: string
                example: Unauthorized
              message:
                type: string
                example: You haven't right permission
    "404":
      description: Resource not found
      content:
        "application/json":
          schema:
            type: object
            properties:
              code:
                type: integer
                format: Int32
                example: 404
              error:
                type: string
                example: Not found
              message:
                type: string
                example: Requested resource not found
    "400":
      description: Bad Request
      content:
        "application/json":
          schema:
            type: object
            properties:
              code:
                type: integer
                format: Int32
                example: 400
              error:
                type: string
                example: Bad request
              data:
                type: array
                items:
                  type: object
                  properties:
                    field:
                      type: string
                      example: email
                    message:
                      type: string
                      example: Invalid email
                    in:
                      type: string
                      enum: [query, body]
                      example: body
  parameters:
    pageParam:
      in: query
      name: page
      description: Current page number
      schema:
        type: integer
        format: Int32
        example: 1
    limitParam:
      in: query
      name: limit
      description: maximum item to be return
      schema:
        type: integer
        format: Int32
        example: 10
    sortTypeParam:
      in: query
      name: sort_type
      description: sorting type asc or dsc
      schema:
        type: string
        enum: [ase, dsc]
        example: dsc
    sortByParam:
      in: query
      name: sort_by
      description: sorted key
      schema:
        type: string
        example: updatedAt
    searchParam:
      in: query
      name: search
      description: search field
      schema:
        type: string
        example: title
    idPathParam:
      in: path
      name: id
      description: id
      required: true
      schema:
        type: integer
        format: Int32
        example: 1
